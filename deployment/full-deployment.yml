---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mysql
  strategy:
    type: Recreate
  template: 
    metadata:
      labels:
        component: mysql
    spec:
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: mysql
          image: mysql
          imagePullPolicy: Always
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqldatabase
                  key: DB_ROOT_PASS
            - name: MYSQL_DATABASE
              value: FPL
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysqldatabase
                  key: DB_USERNAME
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqldatabase
                  key: DB_PASS
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  type: ClusterIP
  selector:
    component: mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-persistent-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: fplstorage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fpl-api
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      annotations:
        date: "annot-date"
      labels:
        component: api
    spec:
      containers:
        - name: api
          image: strangeloop1710/fpl-api
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: DB_HOST
              value: mysql-service
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysqldatabase
                  key: DB_USERNAME
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysqldatabase
                  key: DB_PASS
            - name: FLASK_APP
              value: app.main
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-c", "flask initdb" ]
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  type: ClusterIP
  selector:
    component: api
  ports:
    - port: 3001
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fpl-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      component: frontend
  template:
    metadata:
      annotations:
        date: "annot-date"
      labels:
        component: frontend
    spec:
      containers:
        - name: frontend
          image: strangeloop1710/fpl-react
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: ClusterIP
  selector:
    component: frontend
  ports:
    - port: 3000
      targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fpl-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: 34.93.198.97.xip.io
      http:
        paths:
          - path: /?(.*)
            backend:
              serviceName: frontend-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: api-service
              servicePort: 3001
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: update-db
spec:
  schedule: "0 6 * * 2,4"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: update-container
            image: strangeloop1710/fpl-api:latest
            imagePullPolicy: Always
            env:
              - name: DB_HOST
                value: mysql-service
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: mysqldatabase
                    key: DB_USERNAME
              - name: DB_PASS
                valueFrom:
                  secretKeyRef:
                    name: mysqldatabase
                    key: DB_PASS
              - name: FLASK_APP
                value: app.main
            command: ["/bin/sh", "-c", "flask updatedb"]
          restartPolicy: OnFailure
